/*
* This Java source file was generated by the Gradle 'init' task.
*/
package ece651.riskgame.client;

import java.io.IOException;
import java.net.URL;
import java.util.HashMap;

import ece651.riskgame.client.controllers.GameController;
import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Labeled;
import javafx.scene.layout.Pane;
import javafx.stage.Stage;

public class RiscApplication extends Application {

  // SocketIO
  private AppIO appIO;
  // GUIPlayer
  GUIPlayer guiPlayer;
  
  /**
   * Method called to launch the frontend application
   */
  public static void main(String[] args) {
    launch();
  }

  @Override
  public void start(Stage stage) throws IOException {
    appIO = new AppIO(new String[] {"0.0.0.0", "1651"});
    
    URL xmlResource = getClass().getResource("/ui/main.fxml");

    FXMLLoader loader = new FXMLLoader(xmlResource);
    loadControllers(loader);
    
    Pane gp = loader.load();

    Scene scene = new Scene(gp, 1138, 823);
    
    //URL cssResource = getClass().getResource("/ui/css/game-map.css");
    //scene.getStylesheets().add(cssResource.toString());

    setUsername(scene, appIO.getColor());

    /*
    territoryInfo.setInfo(((Labeled) scene.lookup("#territoryInformation")).textProperty());    
    territoryList = new TerritoryList(appIO.getGameInfo().getBoard().getTerritoryNames());

    System.out.println(territoryInfo);
    
    @SuppressWarnings("unchecked")
    ListView<String> territories = (ListView<String>) scene.lookup("#territoryList");
    territories.setItems(territoryList.getList());
    */
    /*
    Button confirmBtn = (Button) scene.lookup("#placeBtn");
    confirmBtn.setOnMouseClicked(new EventHandler<MouseEvent>() {
        @Override
        public void handle(MouseEvent event) {
            scene.lookup("#placementPanel").setVisible(false);
            scene.lookup("#actionPanel").setVisible(true);
        }
      });
    */
    stage.setScene(scene);
    stage.show();        
  }

  private void setUsername(Scene scene, String name) {
    ((Labeled) scene.lookup("#playerName")).textProperty().setValue(appIO.getColor());
  }
  
  private void loadControllers(FXMLLoader loader) {
    HashMap<Class<?>, Object> controllers = new HashMap<>();    
    controllers.put(GameController.class, new GameController());
    loader.setControllerFactory((c) -> {
      return controllers.get(c);
    });
    
  }
}
